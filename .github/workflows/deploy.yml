name: CI/CD - Build et Déploiement .NET sur Synology NAS

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build de l'application et création de l'image Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0"

      - name: Restauration des dépendances
        run: dotnet restore -r linux-x64

      - name: Build de l'application
        run: dotnet build --configuration Release

      - name: Publication de l'application
        run: dotnet publish -c Release -r linux-x64 -o published --self-contained true --no-build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: published/

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build et push de l'image Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: williaml92/angular_api:latest

  deploy:
    name: Déploiement sur Synology NAS via Docker
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Déployer l'image Docker sur le NAS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SYNOLOGY_HOST }}
          username: ${{ secrets.SYNOLOGY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "Vérification de l'installation de Docker..."
            if ! command -v docker > /dev/null; then
              echo "Docker n'est pas installé. Installation de Docker..."
              sudo apt-get update && sudo apt-get install -y docker.io
            else
              echo "Docker est déjà installé."
            fi

            echo "Déploiement de la nouvelle image Docker..."
            docker pull williaml92/angular_api:latest
            docker stop nom-du-container || true
            docker rm nom-du-container || true
            docker run -d --name nom-du-container -p 80:80 williaml92/angular_api:latest

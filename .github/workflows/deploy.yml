name: CI/CD - Build et Déploiement .NET sur Synology NAS

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build de l'application et création de l'image Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0"

      - name: Restauration des dépendances
        run: dotnet restore -r linux-x64

      - name: Build de l'application
        run: dotnet build --configuration Release

      - name: Publication de l'application
        run: dotnet publish -c Release -r linux-x64 -o published --self-contained true --no-build

      - name: Build de l'image Docker
        run: docker build -t angular_api:latest .

      - name: Sauvegarde de l'image Docker
        run: docker save angular_api:latest -o angular_api.tar
        continue-on-error: true

      - name: Upload de l'image Docker
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: angular_api.tar

  deploy:
    name: Déploiement sur Synology NAS via Docker
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Téléchargement de l'image Docker
        uses: actions/download-artifact@v3
        with:
          name: docker-image

      - name: Copie de l'image Docker sur le NAS
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.SYNOLOGY_HOST }}
          username: ${{ secrets.SYNOLOGY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "angular_api.tar"
          target: "~/angular_api.tar"

      - name: Déploiement de l'image Docker sur le NAS
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.SYNOLOGY_HOST }}
          username: ${{ secrets.SYNOLOGY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker load -i ~/angular_api.tar
            docker stop angular_api || true
            docker rm angular_api || true
            docker run -d --name angular_api -p 80:80 angular_api:latest
